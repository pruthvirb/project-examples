node {
    def server
    def buildInfo
    def rtGradle
    
    stage ('Clone') {
        git url: 'https://github.com/jfrog/project-examples.git'
    }
 
    stage ('Artifactory configuration') {
        // Obtain an Artifactory server instance, defined in Jenkins --> Manage Jenkins --> Configure System:
        server = Artifactory.server 'cloud-hts2'

        rtGradle = Artifactory.newGradleBuild()
        rtGradle.tool = 'GRADLE_TOOL' // Tool name from Jenkins configuration
        rtGradle.deployer repo: 'pruthvi-gradle-dev', server: server
        rtGradle.resolver repo: 'pruthvi-gradle-dev', server: server
        rtGradle.deployer.deployArtifacts = false // Disable artifacts deployment during Gradle run
        
        buildInfo = Artifactory.newBuildInfo()
    }
 
    stage ('Test') {
        rtGradle.run rootDir: 'gradle-examples/gradle-example-ci-server', tasks: 'clean test --info'
    }
 
    stage ('Deploy') {
        rtGradle.run rootDir: 'gradle-examples/gradle-example-ci-server', tasks: 'artifactoryPublish', buildInfo: buildInfo
    }
    
    stage ('Publish build info') {
        server.publishBuildInfo buildInfo
    }
    
     stage ('Xray scan') {
        def scanConfig = [
                'buildName'      : buildInfo.name,
                'buildNumber'    : buildInfo.number,
                'failBuild'      : true
        ]
        def scanResult = server.xrayScan scanConfig
        echo scanResult as String
    }
}
